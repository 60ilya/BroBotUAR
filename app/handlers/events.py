from aiogram import Router, types, F, Bot
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from keyboards.inline import events_menu, events_month_menu, events_month_request, back_start_menu

router = Router()

class EventStates(StatesGroup):
    waiting_for_event_data = State() 

@router.callback_query(F.data == 'events')
async def cmd_start(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "üéü –í—Å—ë —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –≤ –ö–µ–π–ø—Ç–∞—É–Ω–µ ‚Äî –∫–æ–Ω—Ü–µ—Ä—Ç—ã, –º–∞—Ä–∫–µ—Ç—ã, –≤–µ—á–µ—Ä–∏–Ω–∫–∏, –≤—ã—Å—Ç–∞–≤–∫–∏",
        reply_markup=events_menu(),
        parse_mode="HTML")
    
@router.callback_query(F.data == 'events_month')
async def events_month(callback: types.CallbackQuery, bot: Bot):
    channel_username = "@capetown_uar"
    pin_url = await get_pinned_message_url(bot, channel_username)
    
    await callback.message.edit_text(
        "üéü¬†<b>–ê—Ñ–∏—à–∞ –ö–µ–π–ø—Ç–∞—É–Ω–∞ ‚Äî –≤—Å—ë —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ —ç—Ç–æ–≥–æ –º–µ—Å—è—Ü–∞!</b>\n"
        "üå¥ –§–µ—Å—Ç–∏–≤–∞–ª–∏, –≤–µ—á–µ—Ä–∏–Ω–∫–∏, –º–∞—Ä–∫–µ—Ç—ã, –≤—ã—Å—Ç–∞–≤–∫–∏, –∫–æ–Ω—Ü–µ—Ä—Ç—ã –∏ –Ω–æ–≤—ã–µ –º–µ—Å—Ç–∞ ‚Äî —è —Å–æ–±–∏—Ä–∞—é –¥–ª—è —Ç–µ–±—è –≤—Å—ë, —á—Ç–æ —Å—Ç–æ–∏—Ç –≤–Ω–∏–º–∞–Ω–∏—è.\n\n"
        "üí° <b>–°–æ–±—ã—Ç–∏—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏</b> –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é, —á—Ç–æ–±—ã –≤—Å–µ–≥–¥–∞ –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ,"
        " <b>–∫—É–¥–∞ –ø–æ–π—Ç–∏ –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ, –≥–¥–µ –ø–æ–µ—Å—Ç—å –≤–∫—É—Å–Ω–æ, –∞ –≥–¥–µ –ø–æ—Ç–∞–Ω—Ü–µ–≤–∞—Ç—å –¥–æ —É—Ç—Ä–∞.</b>",
        reply_markup=events_month_menu(pin_url),
        parse_mode="HTML")
    
async def get_pinned_message_url(bot: Bot, channel_username: str) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
        chat = await bot.get_chat(channel_username)
        
        if chat.pinned_message:
            username = channel_username.lstrip('@')
            message_id = chat.pinned_message.message_id
            return f"https://t.me/{username}/{message_id}"
        else:
            return f"https://t.me/{channel_username.lstrip('@')}"
            
    except Exception as e:
        return f"–û—à–∏–±–∫–∞: {e}"
    
@router.callback_query(F.data == 'events_request')
async def events_request(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(EventStates.waiting_for_event_data)

    await callback.message.edit_text(
        "üéâ –ö–ª–∞—Å—Å–Ω–æ! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ—ë–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏, –∏ —è –¥–æ–±–∞–≤–ª—é –µ–≥–æ –≤ –°–æ–±—ã—Ç–∏—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏ üôå\n\n"
        "–ü—Ä–æ—Å—Ç–æ –∫–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ —Ç–µ–∫—Å—Ç –Ω–∏–∂–µ, —à–∞–±–ª–æ–Ω —Å–∫–æ–ø–∏—Ä—É–µ—Ç—Å—è, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –µ–≥–æ –∏ –≤—ã—à–ª–∏—Ç–µ –≤ –æ—Ç–≤–µ—Ç:\n\n"
        "<code>üìç<b>–ù–∞–∑–≤–∞–Ω–∏–µ / —Ñ–æ—Ä–º–∞—Ç:</b> \n"
        "(–ø—Ä–∏–º–µ—Ä: Sunset Jazz Party / –ú–∞—Ä–∫–µ—Ç –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –¥–Ω—è)\n"
        "üìÖ¬†<b>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:</b> \n"
        "(–ø—Ä–∏–º–µ—Ä: 25 –æ–∫—Ç—è–±—Ä—è, —Å 17:00 –¥–æ 23:00)\n"
        "üìç¬†<b>–õ–æ–∫–∞—Ü–∏—è:</b> \n" 
        "(–Ω–∞–∑–≤–∞–Ω–∏–µ, —Ä–∞–π–æ–Ω –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç—É)\n"
        "üí∞¬†<b>–°—Ç–æ–∏–º–æ—Å—Ç—å (–µ—Å–ª–∏ –µ—Å—Ç—å):</b> \n"
        "üßæ¬†<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> \n"
        "(2‚Äì3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: —á—Ç–æ –±—É–¥–µ—Ç, –¥–ª—è –∫–æ–≥–æ, —á–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ)</code>\n\n"
        "üì∏¬†(–ø–æ –∂–µ–ª–∞–Ω–∏—é)¬†–ø—Ä–∏–∫—Ä–µ–ø–∏ –∞—Ñ–∏—à—É –∏–ª–∏ 1 —Ñ–æ—Ç–æ\n\n"
        "üí¨ –ü–æ—Å–ª–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –≤ –∞—Ñ–∏—à–µ, –∞ —è –æ—Ç–º–µ—á—É –í–∞—Å –∫–∞–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞\n\n"
        "üî• –°–æ–±—ã—Ç–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é, —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –º–æ–∂–Ω–æ 1 —Ä–∞–∑ –≤ 14 –¥–Ω–µ–π\n\n"
        "–í <b>–ê—Ñ–∏—à—É –º–µ—Å—è—Ü–∞</b> –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∑–∞ –¥–æ–Ω–∞—Ç –≤ Bro Bot",
        reply_markup=events_month_request(),
        parse_mode="HTML")
    
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
@router.message(EventStates.waiting_for_event_data, F.text)
async def process_event_data(message: types.Message, state: FSMContext):
    event_data = message.text
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    await state.update_data(event_data=event_data, user_id=message.from_user.id)
    
    # –ó–¥–µ—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    # –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É –∏ —Ç.–¥.
    
    # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await message.answer(
        "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ø–æ–ª—É—á–µ–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.\n"
        "–ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –µ–≥–æ –∏ –¥–æ–±–∞–≤–∏–º –≤ –∞—Ñ–∏—à—É –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.",
        reply_markup=back_start_menu()
    )
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–µ–¥–∏–∞-—Å–æ–æ–±—â–µ–Ω–∏–π (—Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é)
@router.message(EventStates.waiting_for_event_data, F.photo)
async def process_event_data_with_photo(message: types.Message, state: FSMContext):
    if message.caption:
        event_data = message.caption
        photo_id = message.photo[-1].file_id
        
        await state.update_data(
            event_data=event_data, 
            user_id=message.from_user.id,
            photo_id=photo_id
        )
        
        await message.answer(
            "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —Å —Ñ–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.",
            reply_markup=back_start_menu()
        )

        
    else:
        await message.answer(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∫ —Ñ–æ—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—è —à–∞–±–ª–æ–Ω."
        )
        return  # –ù–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∂–¥–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥
    
    await state.clear()