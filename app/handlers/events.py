import logging
from aiogram import Router, types, F, Bot
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from config import Config
from db import Database
from keyboards.inline import events_menu, events_month_menu, events_month_request, back_start_menu, events_month_request

router = Router()
db = Database()

class EventStates(StatesGroup):
    waiting_for_event_data = State() 

@router.callback_query(F.data == 'events')
async def cmd_start(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "üéü –í—Å—ë —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –≤ –ö–µ–π–ø—Ç–∞—É–Ω–µ ‚Äî –∫–æ–Ω—Ü–µ—Ä—Ç—ã, –º–∞—Ä–∫–µ—Ç—ã, –≤–µ—á–µ—Ä–∏–Ω–∫–∏, –≤—ã—Å—Ç–∞–≤–∫–∏",
        reply_markup=events_menu(),
        parse_mode="HTML")
    
@router.callback_query(F.data == 'events_month')
async def events_month(callback: types.CallbackQuery, bot: Bot):
    channel_username = "@capetown_uar"
    pin_url = await get_pinned_message_url(bot, channel_username)
    
    await callback.message.edit_text(
        "üéü¬†<b>–ê—Ñ–∏—à–∞ –ö–µ–π–ø—Ç–∞—É–Ω–∞ ‚Äî –≤—Å—ë —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ —ç—Ç–æ–≥–æ –º–µ—Å—è—Ü–∞!</b>\n"
        "üå¥ –§–µ—Å—Ç–∏–≤–∞–ª–∏, –≤–µ—á–µ—Ä–∏–Ω–∫–∏, –º–∞—Ä–∫–µ—Ç—ã, –≤—ã—Å—Ç–∞–≤–∫–∏, –∫–æ–Ω—Ü–µ—Ä—Ç—ã –∏ –Ω–æ–≤—ã–µ –º–µ—Å—Ç–∞ ‚Äî —è —Å–æ–±–∏—Ä–∞—é –¥–ª—è —Ç–µ–±—è –≤—Å—ë, —á—Ç–æ —Å—Ç–æ–∏—Ç –≤–Ω–∏–º–∞–Ω–∏—è.\n\n"
        "üí° <b>–°–æ–±—ã—Ç–∏—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏</b> –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é, —á—Ç–æ–±—ã –≤—Å–µ–≥–¥–∞ –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ,"
        " <b>–∫—É–¥–∞ –ø–æ–π—Ç–∏ –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ, –≥–¥–µ –ø–æ–µ—Å—Ç—å –≤–∫—É—Å–Ω–æ, –∞ –≥–¥–µ –ø–æ—Ç–∞–Ω—Ü–µ–≤–∞—Ç—å –¥–æ —É—Ç—Ä–∞.</b>",
        reply_markup=events_month_menu(pin_url),
        parse_mode="HTML")
    
async def get_pinned_message_url(bot: Bot, channel_username: str) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
        chat = await bot.get_chat(channel_username)
        
        if chat.pinned_message:
            username = channel_username.lstrip('@')
            message_id = chat.pinned_message.message_id
            return f"https://t.me/{username}/{message_id}"
        else:
            return f"https://t.me/{channel_username.lstrip('@')}"
            
    except Exception as e:
        return f"–û—à–∏–±–∫–∞: {e}"
    
@router.callback_query(F.data == 'events_request')
async def events_request(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(EventStates.waiting_for_event_data)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    await state.update_data(duration_days=14, is_monthly=False)

    await callback.message.edit_text(
        "üéâ –ö–ª–∞—Å—Å–Ω–æ! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ—ë–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏, –∏ —è –¥–æ–±–∞–≤–ª—é –µ–≥–æ –≤ –°–æ–±—ã—Ç–∏—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏ üôå\n\n"
        "üìÖ <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏—è:</b>\n"
        "‚Ä¢ –ê—Ñ–∏—à–∞ –Ω–µ–¥–µ–ª–∏ - 14 –¥–Ω–µ–π (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)\n"
        "‚Ä¢ –ê—Ñ–∏—à–∞ –º–µ—Å—è—Ü–∞ - 30 –¥–Ω–µ–π (–∑–∞ –¥–æ–Ω–∞—Ç)\n\n"
        "–ü—Ä–æ—Å—Ç–æ –∫–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ —Ç–µ–∫—Å—Ç –Ω–∏–∂–µ, —à–∞–±–ª–æ–Ω —Å–∫–æ–ø–∏—Ä—É–µ—Ç—Å—è, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –µ–≥–æ –∏ –≤—ã—à–ª–∏—Ç–µ –≤ –æ—Ç–≤–µ—Ç:\n\n"
        "<code>üìç<b>–ù–∞–∑–≤–∞–Ω–∏–µ / —Ñ–æ—Ä–º–∞—Ç:</b> \n"
        "(–ø—Ä–∏–º–µ—Ä: Sunset Jazz Party / –ú–∞—Ä–∫–µ—Ç –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –¥–Ω—è)\n"
        "üìÖ¬†<b>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:</b> \n"
        "(–ø—Ä–∏–º–µ—Ä: 25 –æ–∫—Ç—è–±—Ä—è, —Å 17:00 –¥–æ 23:00)\n"
        "üìç¬†<b>–õ–æ–∫–∞—Ü–∏—è:</b> \n" 
        "(–Ω–∞–∑–≤–∞–Ω–∏–µ, —Ä–∞–π–æ–Ω –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç—É)\n"
        "üí∞¬†<b>–°—Ç–æ–∏–º–æ—Å—Ç—å (–µ—Å–ª–∏ –µ—Å—Ç—å):</b> \n"
        "üßæ¬†<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> \n"
        "(2‚Äì3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: —á—Ç–æ –±—É–¥–µ—Ç, –¥–ª—è –∫–æ–≥–æ, —á–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ)</code>\n\n"
        "üì∏¬†(–ø–æ –∂–µ–ª–∞–Ω–∏—é)¬†–ø—Ä–∏–∫—Ä–µ–ø–∏ –∞—Ñ–∏—à—É –∏–ª–∏ 1 —Ñ–æ—Ç–æ\n\n"
        "üí¨ –ü–æ—Å–ª–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –≤ –∞—Ñ–∏—à–µ, –∞ —è –æ—Ç–º–µ—á—É –í–∞—Å –∫–∞–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞\n\n"
        "üî• –°–æ–±—ã—Ç–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é, —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –º–æ–∂–Ω–æ 1 —Ä–∞–∑ –≤ 14 –¥–Ω–µ–π",
        reply_markup=events_month_request(is_monthly=False),
        parse_mode="HTML"
    )
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è toggle –∫–Ω–æ–ø–æ–∫
@router.callback_query(F.data == 'events_duration')
async def handle_toggle_duration(callback: types.CallbackQuery, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    state_data = await state.get_data()
    current_is_monthly = state_data.get('is_monthly', False)
    
    # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    new_is_monthly = not current_is_monthly
    duration_days = 30 if new_is_monthly else 14
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.update_data(duration_days=duration_days, is_monthly=new_is_monthly)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await callback.message.edit_reply_markup(
        reply_markup=events_month_request(is_monthly=new_is_monthly)
    )
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
    duration_text = "30 –¥–Ω–µ–π (–ê—Ñ–∏—à–∞ –º–µ—Å—è—Ü–∞)" if new_is_monthly else "14 –¥–Ω–µ–π (–ê—Ñ–∏—à–∞ –Ω–µ–¥–µ–ª–∏)"
    await callback.answer(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration_text}")
    
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
@router.message(EventStates.waiting_for_event_data, F.text)
async def process_event_data(message: types.Message, state: FSMContext, bot: Bot):
    event_data = message.text
    user = message.from_user
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–≤–∫–ª—é—á–∞—è duration_days)
    state_data = await state.get_data()
    duration_days = state_data.get('duration_days', 14)
    
    # –î–æ–±–∞–≤–ª—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    db.add_user(
        tg_id=user.id,
        username=user.username,
        full_name=user.full_name
    )
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID
    user_db = db.get_user(user.id)
    
    if user_db:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ –ë–î —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
        request_id = db.add_request(
            user_id=user_db['id'],
            request_type='event',
            text=event_data,
            duration_days=duration_days  # –î–æ–±–∞–≤–ª—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        )
        
        if request_id:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º
            await notify_admins_about_new_event(bot, event_data, user, request_id, duration_days)
            
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            duration_text = "14 –¥–Ω–µ–π" if duration_days == 14 else "30 –¥–Ω–µ–π"
            await message.answer(
                f"‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ø–æ–ª—É—á–µ–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.\n"
                f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: {duration_text}\n"
                f"–ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –µ–≥–æ –∏ –¥–æ–±–∞–≤–∏–º –≤ –∞—Ñ–∏—à—É –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.",
                reply_markup=back_start_menu()
            )
        else:
            await message.answer(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=back_start_menu()
            )
    else:
        await message.answer(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=back_start_menu()
        )
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–µ–¥–∏–∞-—Å–æ–æ–±—â–µ–Ω–∏–π (—Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é)
@router.message(EventStates.waiting_for_event_data, F.photo)
async def process_event_data_with_photo(message: types.Message, state: FSMContext, bot: Bot):
    user = message.from_user
    
    if message.caption:
        event_data = message.caption
        photo_id = message.photo[-1].file_id
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–≤–∫–ª—é—á–∞—è duration_days)
        state_data = await state.get_data()
        duration_days = state_data.get('duration_days', 14)
        
        # –î–æ–±–∞–≤–ª—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        db.add_user(
            tg_id=user.id,
            username=user.username,
            full_name=user.full_name
        )
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID
        user_db = db.get_user(user.id)
        
        if user_db:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ –ë–î —Å –ø—É—Ç—è–º–∏ –∫ –º–µ–¥–∏–∞ –∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
            request_id = db.add_request(
                user_id=user_db['id'],
                request_type='event',
                text=event_data,
                media_paths=[photo_id],  # –°–æ—Ö—Ä–∞–Ω—è–µ–º file_id —Ñ–æ—Ç–æ
                duration_days=duration_days  # –î–æ–±–∞–≤–ª—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
            )
            
            if request_id:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º —Å —Ñ–æ—Ç–æ
                await notify_admins_about_new_event_with_photo(bot, event_data, user, request_id, photo_id, duration_days)
                
                duration_text = "14 –¥–Ω–µ–π" if duration_days == 14 else "30 –¥–Ω–µ–π"
                await message.answer(
                    f"‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —Å —Ñ–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.\n"
                    f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: {duration_text}",
                    reply_markup=back_start_menu()
                )
            else:
                await message.answer(
                    "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                    reply_markup=back_start_menu()
                )
        else:
            await message.answer(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=back_start_menu()
            )
        
    else:
        await message.answer(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∫ —Ñ–æ—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—è —à–∞–±–ª–æ–Ω."
        )
        return 
    
    await state.clear()

async def notify_admins_about_new_event(bot: Bot, event_data: str, user: types.User, request_id: int, duration_days: int):
    """–£–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–æ–≤ –æ –Ω–æ–≤–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ (—Ç–µ–∫—Å—Ç)"""
    try:
        duration_text = "14 –¥–Ω–µ–π (–ê—Ñ–∏—à–∞ –Ω–µ–¥–µ–ª–∏)" if duration_days == 14 else "30 –¥–Ω–µ–π (–ê—Ñ–∏—à–∞ –º–µ—Å—è—Ü–∞)"
        
        admin_text = (
            "üéâ <b>–ù–û–í–û–ï –ú–ï–†–û–ü–†–ò–Ø–¢–ò–ï –ù–ê –ú–û–î–ï–†–ê–¶–ò–Æ</b>\n\n"
            f"üë§ <b>–û—Ç:</b> {user.full_name}\n"
            f"üì± <b>Username:</b> @{user.username if user.username else '–Ω–µ—Ç'}\n"
            f"üÜî <b>User ID:</b> {user.id}\n"
            f"üìã <b>ID –∑–∞—è–≤–∫–∏:</b> #{request_id}\n"
            f"üìÖ <b>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b> {duration_text}\n\n"
            f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:</b>\n<code>{event_data}</code>\n\n"
            "‚ö° <i>–î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin</i>"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
        for admin_id in Config.ADMIN_IDS:
            try:
                await bot.send_message(
                    chat_id=admin_id,
                    text=admin_text,
                    parse_mode="HTML"
                )
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É {admin_id}: {e}")
                
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ notify_admins_about_new_event: {e}")

async def notify_admins_about_new_event_with_photo(bot: Bot, event_data: str, user: types.User, request_id: int, photo_id: str, duration_days: int):
    """–£–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–æ–≤ –æ –Ω–æ–≤–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ (—Ñ–æ—Ç–æ + —Ç–µ–∫—Å—Ç)"""
    try:
        duration_text = "14 –¥–Ω–µ–π (–ê—Ñ–∏—à–∞ –Ω–µ–¥–µ–ª–∏)" if duration_days == 14 else "30 –¥–Ω–µ–π (–ê—Ñ–∏—à–∞ –º–µ—Å—è—Ü–∞)"
        
        caption = (
            "üéâ <b>–ù–û–í–û–ï –ú–ï–†–û–ü–†–ò–Ø–¢–ò–ï –ù–ê –ú–û–î–ï–†–ê–¶–ò–Æ</b>\n\n"
            f"üë§ <b>–û—Ç:</b> {user.full_name}\n"
            f"üì± <b>Username:</b> @{user.username if user.username else '–Ω–µ—Ç'}\n"
            f"üÜî <b>User ID:</b> {user.id}\n"
            f"üìã <b>ID –∑–∞—è–≤–∫–∏:</b> #{request_id}\n"
            f"üìÖ <b>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b> {duration_text}\n\n"
            f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:</b>\n<code>{event_data}</code>\n\n"
            "‚ö° <i>–î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin</i>"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
        for admin_id in Config.ADMIN_IDS:
            try:
                await bot.send_photo(
                    chat_id=admin_id,
                    photo=photo_id,
                    caption=caption,
                    parse_mode="HTML"
                )
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –∞–¥–º–∏–Ω—É {admin_id}: {e}")
                
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ notify_admins_about_new_event_with_photo: {e}")