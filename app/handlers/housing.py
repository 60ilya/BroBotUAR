import logging
from aiogram import Router, types, F, Bot
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from config import Config
from db import Database
from keyboards.inline import housing_menu_ikb, housing_rent_ikb, housing_request_ikb, back_start_menu

router = Router()
db = Database()

class HousingStates(StatesGroup):
    waiting_for_housing_data = State() 

@router.callback_query(F.data == 'housing')
async def housing_menu(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "üè† –¢–æ–ª—å–∫–æ —Å–≤–µ–∂–∏–µ –∏ —Ä–µ–∞–ª—å–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.\n"
        "üìÖ –ö–∞–∂–¥–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ 14 –¥–Ω–µ–π, –ø–æ—Ç–æ–º –µ–≥–æ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å.\n"
        "–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ:\n"
        "‚Äî –Ω–∞–π—Ç–∏ –∫–≤–∞—Ä—Ç–∏—Ä—É, –∫–æ–º–Ω–∞—Ç—É –∏–ª–∏ –¥–æ–º\n"
        "‚Äî —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —Å–≤–æ—ë –æ–±—ä—è–≤–ª–µ–Ω–∏–µ\n"
        "–ß—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?\n",
        reply_markup=housing_menu_ikb(),
        parse_mode="HTML")
    
@router.callback_query(F.data == 'housing_rent')
async def housing_rent(callback: types.CallbackQuery):
    text_template = "–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é —è –∏–∑ Bro BOT –ø–∏—à—É –ø–æ —Ç–µ–º–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, –º–Ω–µ –Ω—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è\n\n–ù–∞ —Ç–µ–º—É: –°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∞/–ø—Ä–æ–¥–∞–∂–∞, –∞—Ä–µ–Ω–¥–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è, –∞—Ä–µ–Ω–¥–∞ –æ—Ç 6 –º–µ—Å—è—Ü–µ–≤ –∏ –±–æ–ª—å—à–µ\n"
    
    await callback.message.edit_text(
        "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —à–∞–±–ª–æ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ @controllinginternational\n\n"
        "<code>–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é —è –∏–∑ Bro BOT –ø–∏—à—É –ø–æ —Ç–µ–º–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, –º–Ω–µ –Ω—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è\n\n"
        "–ù–∞ —Ç–µ–º—É: –°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∞/–ø—Ä–æ–¥–∞–∂–∞, –∞—Ä–µ–Ω–¥–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è, –∞—Ä–µ–Ω–¥–∞ –æ—Ç 6 –º–µ—Å—è—Ü–µ–≤ –∏ –±–æ–ª—å—à–µ\n</code>",
        reply_markup=housing_rent_ikb(text_template),
        parse_mode="HTML")
    
@router.callback_query(F.data == 'housing_rent')
async def housing_rent(callback: types.CallbackQuery):
    text_template = """
–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é —è –∏–∑ Bro BOT –ø–∏—à—É –ø–æ —Ç–µ–º–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, –º–Ω–µ –Ω—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è

–ù–∞ —Ç–µ–º—É: –°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∞/–ø—Ä–æ–¥–∞–∂–∞, –∞—Ä–µ–Ω–¥–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è, –∞—Ä–µ–Ω–¥–∞ –æ—Ç 6 –º–µ—Å—è—Ü–µ–≤ –∏ –±–æ–ª—å—à–µ"""
    
    await callback.message.edit_text(
        "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —à–∞–±–ª–æ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ @controllinginternational\n\n"
        "<code>–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é —è –∏–∑ Bro BOT –ø–∏—à—É –ø–æ —Ç–µ–º–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, –º–Ω–µ –Ω—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è\n\n"
        "–ù–∞ —Ç–µ–º—É: –°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∞/–ø—Ä–æ–¥–∞–∂–∞, –∞—Ä–µ–Ω–¥–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è, –∞—Ä–µ–Ω–¥–∞ –æ—Ç 6 –º–µ—Å—è—Ü–µ–≤ –∏ –±–æ–ª—å—à–µ\n</code>",
        reply_markup=housing_rent_ikb(text_template),
        parse_mode="HTML")
    
@router.callback_query(F.data == 'housing_request')
async def housing_request(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(HousingStates.waiting_for_housing_data)
    
    contact = f"@{callback.from_user.username}" if callback.from_user.username else ""
    
    search_template = f"""
<b>–®–∞–±–ª–æ–Ω: –ò—â—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å</b>
<code><b>üìç –†–∞–π–æ–Ω:</b>
<b>üè† –¢–∏–ø –∂–∏–ª—å—è (–∫–≤–∞—Ä—Ç–∏—Ä–∞ / –≤–∏–ª–ª–∞ / –∫–æ–º–Ω–∞—Ç–∞ / —Å—Ç—É–¥–∏—è):</b>
<b>üí∞ –¶–µ–Ω–∞ (–≤ ZAR / USD / ‚ÇΩ):</b> 
<b>üìÖ –°—Ä–æ–∫ –∞—Ä–µ–Ω–¥—ã (–ø–æ—Å—É—Ç. / –¥–æ–ª–≥–æ—Å—Ä.):</b>
<b>üßæ –ö–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ —Å–µ–±–µ:</b>
<b>üë§ –ö–æ–Ω—Ç–∞–∫—Ç (TG –Ω–∏–∫ –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω):</b> {contact}</code>"""

    rent_template = f"""
<b>–®–∞–±–ª–æ–Ω: –°–¥–∞—é –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å</b>
<code><b>üìç –†–∞–π–æ–Ω / –õ–æ–∫–∞—Ü–∏—è:</b>
<b>üè† –¢–∏–ø –∂–∏–ª—å—è (–∫–≤–∞—Ä—Ç–∏—Ä–∞ / –≤–∏–ª–ª–∞ / –∫–æ–º–Ω–∞—Ç–∞):</b>
<b>üí∞ –¶–µ–Ω–∞ (–≤ ZAR / USD / ‚ÇΩ, —É–∫–∞–∂–∏ –∑–∞ –¥–µ–Ω—å –∏–ª–∏ –º–µ—Å—è—Ü):</b> 
<b>üìÖ –°—Ä–æ–∫ –∞—Ä–µ–Ω–¥—ã (–ø–æ—Å—É—Ç. / –¥–æ–ª–≥–æ—Å—Ä. / –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å—Ä–æ–∫):</b>
<b>üßæ –ö–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–¥–æ 250 —Å–∏–º–≤–æ–ª–æ–≤ ‚Äî –∏–Ω—Ç–µ—Ä—å–µ—Ä, —É–¥–æ–±—Å—Ç–≤–∞, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –º–æ—Ä—è –∏ —Ç.–¥.):</b>
<b>üë§ –ö–æ–Ω—Ç–∞–∫—Ç (TG –Ω–∏–∫ –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω):</b> {contact}</code>
üì∏ –ü–æ –∂–µ–ª–∞–Ω–∏—é –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ"""

    sail_template = f"""
<b>–®–∞–±–ª–æ–Ω: –ü—Ä–æ–¥–∞—é –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å</b>
<code><b>üìç –†–∞–π–æ–Ω / –õ–æ–∫–∞—Ü–∏—è:</b>
<b>üè† –¢–∏–ø –∂–∏–ª—å—è (–∫–≤–∞—Ä—Ç–∏—Ä–∞ / —Å—Ç—É–¥–∏—è / –∫–æ–º–Ω–∞—Ç–∞ / –¥–æ–º):</b>
<b>üí∞ –¶–µ–Ω–∞ (–≤ ZAR / USD / ‚ÇΩ, —É–∫–∞–∂–∏ –∑–∞ –¥–µ–Ω—å –∏–ª–∏ –º–µ—Å—è—Ü):</b> 
<b>üìÖ –°—Ä–æ–∫ –∞—Ä–µ–Ω–¥—ã (–ø–æ—Å—É—Ç. / –¥–æ–ª–≥–æ—Å—Ä.):</b>
<b>üßæ –ö–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–¥–æ 250 —Å–∏–º–≤–æ–ª–æ–≤ ‚Äî –∏–Ω—Ç–µ—Ä—å–µ—Ä, —É–¥–æ–±—Å—Ç–≤–∞, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –º–æ—Ä—è –∏ —Ç.–¥.):</b>
<b>üë§ –ö–æ–Ω—Ç–∞–∫—Ç (TG –Ω–∏–∫ –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω):</b> {contact}</code>
üì∏ –ü–æ –∂–µ–ª–∞–Ω–∏—é –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ"""
    
    await callback.message.edit_text(
        "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –Ω—É–∂–Ω—ã–π —à–∞–±–ª–æ–Ω, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –µ–≥–æ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –≤ –æ—Ç–≤–µ—Ç. –û–±—å—è–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–π–¥–µ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏—é –∏ –≤—Å–∫–æ—Ä–µ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –Ω–∞ 14 –¥–Ω–µ–π, –ø–æ—Å–ª–µ —á–µ–≥–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.\n"
        f"{search_template}\n"
        f"{rent_template}\n"
        f"{sail_template}\n",
        reply_markup=housing_request_ikb(),
        parse_mode="HTML")
    
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
@router.message(HousingStates.waiting_for_housing_data, F.text)
async def process_housing_data(message: types.Message, state: FSMContext, bot: Bot):
    housing_data = message.text
    user = message.from_user
    
    # –î–æ–±–∞–≤–ª—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    db.add_user(
        tg_id=user.id,
        username=user.username,
        full_name=user.full_name
    )
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID
    user_db = db.get_user(user.id)
    
    if user_db:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ –ë–î —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
        request_id = db.add_request(
            user_id=user_db['id'],
            request_type='housing',
            text=housing_data,
            duration_days=14  # –î–æ–±–∞–≤–ª—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        )
        
        if request_id:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º
            await notify_admins_about_new_housing(bot, housing_data, user, request_id)
            
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await message.answer(
                f"‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.\n"
                f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: 14 –¥–Ω–µ–π\n"
                f"–ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –µ–≥–æ –∏ –¥–æ–±–∞–≤–∏–º –≤ –∞—Ñ–∏—à—É –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.",
                reply_markup=back_start_menu()
            )
        else:
            await message.answer(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=back_start_menu()
            )
    else:
        await message.answer(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=back_start_menu()
        )
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–µ–¥–∏–∞-—Å–æ–æ–±—â–µ–Ω–∏–π (—Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é)
@router.message(HousingStates.waiting_for_housing_data, F.photo)
async def process_housing_data_with_photo(message: types.Message, state: FSMContext, bot: Bot):
    user = message.from_user
    
    if message.caption:
        housing_data = message.caption
        photo_id = message.photo[-1].file_id
        
        # –î–æ–±–∞–≤–ª—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        db.add_user(
            tg_id=user.id,
            username=user.username,
            full_name=user.full_name
        )
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID
        user_db = db.get_user(user.id)
        
        if user_db:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ –ë–î —Å –ø—É—Ç—è–º–∏ –∫ –º–µ–¥–∏–∞ –∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
            request_id = db.add_request(
                user_id=user_db['id'],
                request_type='housing',
                text=housing_data,
                media_paths=[photo_id],  # –°–æ—Ö—Ä–∞–Ω—è–µ–º file_id —Ñ–æ—Ç–æ
                duration_days=14
            )
            
            if request_id:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º —Å —Ñ–æ—Ç–æ
                await notify_admins_about_new_housing_with_photo(bot, housing_data, user, request_id, photo_id)
                
                await message.answer(
                    f"‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.\n"
                    f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: 14 –¥–Ω–µ–π",
                    reply_markup=back_start_menu()
                )
            else:
                await message.answer(
                    "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                    reply_markup=back_start_menu()
                )
        else:
            await message.answer(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=back_start_menu()
            )
        
    else:
        await message.answer(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∫ —Ñ–æ—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—è —à–∞–±–ª–æ–Ω."
        )
        return 
    
    await state.clear()

async def notify_admins_about_new_housing(bot: Bot, housing_data: str, user: types.User, request_id: int):
    """–£–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–æ–≤ –æ –Ω–æ–≤–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ (—Ç–µ–∫—Å—Ç)"""
    try:
        
        admin_text = (
            "üéâ <b>–ù–û–í–û–ï –û–ë–™–Ø–í–õ–ï–ù–ò–ï –ù–ê –ú–û–î–ï–†–ê–¶–ò–Æ</b>\n\n"
            f"üë§ <b>–û—Ç:</b> {user.full_name}\n"
            f"üì± <b>Username:</b> @{user.username if user.username else '–Ω–µ—Ç'}\n"
            f"üÜî <b>User ID:</b> {user.id}\n"
            f"üìã <b>ID –∑–∞—è–≤–∫–∏:</b> #{request_id}\n"
            f"üìÖ <b>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b> 14 –¥–Ω–µ–π\n\n"
            f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:</b>\n<code>{housing_data}</code>\n\n"
            "‚ö° <i>–î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin</i>"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
        for admin_id in Config.ADMIN_IDS:
            try:
                await bot.send_message(
                    chat_id=admin_id,
                    text=admin_text,
                    parse_mode="HTML"
                )
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É {admin_id}: {e}")
                
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ notify_admins_about_new_housing: {e}")

async def notify_admins_about_new_housing_with_photo(bot: Bot, housing_data: str, user: types.User, request_id: int, photo_id: str):
    """–£–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–æ–≤ –æ –Ω–æ–≤–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ (—Ñ–æ—Ç–æ + —Ç–µ–∫—Å—Ç)"""
    try:
        
        caption = (
            "üéâ <b>–ù–û–í–û–ï –û–ë–™–Ø–í–õ–ï–ù–ò–ï –ù–ê –ú–û–î–ï–†–ê–¶–ò–Æ</b>\n\n"
            f"üë§ <b>–û—Ç:</b> {user.full_name}\n"
            f"üì± <b>Username:</b> @{user.username if user.username else '–Ω–µ—Ç'}\n"
            f"üÜî <b>User ID:</b> {user.id}\n"
            f"üìã <b>ID –∑–∞—è–≤–∫–∏:</b> #{request_id}\n"
            f"üìÖ <b>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b> 14 –¥–Ω–µ–π\n\n"
            f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:</b>\n<code>{housing_data}</code>\n\n"
            "‚ö° <i>–î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin</i>"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
        for admin_id in Config.ADMIN_IDS:
            try:
                await bot.send_photo(
                    chat_id=admin_id,
                    photo=photo_id,
                    caption=caption,
                    parse_mode="HTML"
                )
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –∞–¥–º–∏–Ω—É {admin_id}: {e}")
                
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ notify_admins_about_new_housing_with_photo: {e}")